#:import re re
#:import get_color_from_hex kivy.utils.get_color_from_hex
#:import msettings settings.settingsJSON.msettings
#:import get_color_from_hex kivy.utils
#:import Factory kivy.factory.Factory

<-Label>:
    canvas:
        Color:
            rgba: 1, 1, 1, 0.9
        Rectangle:
            texture: self.texture
            size: self.texture_size
            pos: int(self.center_x - self.texture_size[0] / 2.), int(self.center_y - self.texture_size[1] / 2.)
    valign: "center"

<-Button,-ToggleButton>:
    state_image: self.background_normal if self.state == 'normal' else self.background_down
    disabled_image: self.background_disabled_normal if self.state == 'normal' else self.background_disabled_down
    canvas:
        Color:
            rgba: 1, 1, 1, 0
        BorderImage:
            border: self.border
            pos: self.pos
            size: self.size
            source: self.disabled_image if self.disabled else self.state_image
        Color:
            rgba: 1, 1, 1, 1
        Rectangle:
            texture: self.texture
            size: self.texture_size
            pos: int(self.center_x - self.texture_size[0] / 2.), int(self.center_y - self.texture_size[1] / 2.)
    color: msettings.get('THEME_SECOND_COLOR')

<-FileChooserListLayout>:
    on_entry_added: treeview.add_node(args[1])
    on_entries_cleared: treeview.root.nodes = []
    on_subentry_to_entry: not args[2].locked and treeview.add_node(args[1], args[2])
    on_remove_subentry: args[2].nodes = []
    BoxLayout:
        pos: root.pos
        size: root.size
        size_hint: None, None
        orientation: 'vertical'
        BoxLayout:
            size_hint_y: None
            height: '30dp'
            orientation: 'horizontal'
            Widget:
                # Just for spacing
                width: '10dp'
                size_hint_x: None
            RectangleFlatButton:
                text: 'Name'
                text_size: self.size
                font_size: sp(13)
                halign: 'left'
                bold: True
            RectangleFlatButton:
                text: 'Size'
                text_size: self.size
                font_size: sp(13)
                size_hint_x: None
                halign: 'right'
                bold: True
            Widget:
                # Just for spacing
                width: '10dp'
                size_hint_x: None
        ScrollView:
            id: scrollview
            do_scroll_x: False
            Scatter:
                do_rotation: False
                do_scale: False
                do_translation: False
                size: treeview.size
                size_hint_y: None
                TreeView:
                    id: treeview
                    hide_root: True
                    size_hint_y: None
                    width: scrollview.width
                    height: self.minimum_height
                    on_node_expand: root.controller.entry_subselect(args[1])
                    on_node_collapse: root.controller.close_subselection(args[1])

<-SettingSpacer>:



<-Popup>:
    _container: container
    canvas.before:
        Color:
            rgba: 38 / 255, 38 / 255, 38 / 255, 0.8
        Rectangle:
            pos: 0, 0
            size: Window.width, Window.height
    BoxLayout:
        orientation: "vertical"
        canvas.before:
            Color:
                rgb: 38 / 255, 38 / 255, 38 / 255
            Rectangle:
                pos: self.pos
                size: self.size
        canvas.after:
            Color:
                rgba: 235 / 255, 137 / 255, 51 / 255, 0.5
            Line:
                width: 1
                rectangle: self.x, self.y, self.width, self.height
        pos: root.pos

        RectangleFlatButton:
            text: root.title
            color: root.title_color
            size_hint: 1, None
            font_size: sp(12)
            height: self.texture_size[1] + dp(16)
            text_size: self.width - dp(16), None
            font_name: root.title_font
            halign: "center"

        BoxLayout:
            id: container

<-Settings>:
    orientation: 'horizontal'
    canvas.before:
        Color:
            rgb: 38 / 255, 38 / 255, 38 / 255
        Rectangle:
            pos: self.pos
            size: self.size

<-SettingsPanel>:
    spacing: 5
    padding: 5
    size_hint_y: None
    height: self.minimum_height

<-ContentPanel>:
    do_scroll_x: False
    container: content
    GridLayout:
        id: content
        cols: 1
        size_hint_y: None
        height: self.minimum_height

<-MenuSpinner>:
    orientation: 'horizontal'
    size_hint_y: None
    height: '30sp'
    spinner: spinner
    spinner_text: spinner.text
    close_button: button
    Spinner:
        id: spinner
        disabled: True
        opacity: 0
        size_hint: None, None
        size: 0, 0
        size: 0, 0
    RectangleFlatButton:
        font_size: '15sp'
        text: 'Закрыть'
        opacity: 0
        size_hint: None, None
        size: 0, 0
        id: button

<-InterfaceWithSpinner>:
    orientation: 'vertical'
    menu: menu
    content: content

    AnchorLayout:
        ContentPanel:
            id: content
            current_uid: menu.selected_uid
        MenuSpinner:
            anchor_x: "center"
            id: menu

<-SettingItem>:
    size_hint: .25, None
    height: labellayout.texture_size[1] + dp(10)
    content: content
    canvas:
        Color:
            rgba: 47 / 255., 167 / 255., 212 / 255., 0
        Rectangle:
            pos: self.x, self.y + 1
            size: self.size
        Color:
            rgb: .2, .2, .2
        Rectangle:
            pos: self.x, self.y - 2
            size: self.width, 1

    BoxLayout:
        pos: root.pos
        RectangleFlatButton:
            size_hint_x: .66
            id: labellayout
            markup: True
            text: u'{0}\n[size=10sp][color=999999]{1}[/color][/size]'.format(root.title or '', root.desc or '')
            font_size: '12sp'
            text_size: self.width - 32, None

        BoxLayout:
            id: content
            size_hint_x: .33

<-Switch@Switch>:
    active_norm_pos: max(0., min(1., (int(self.active) + self.touch_distance / sp(41))))
    canvas:
        Color:
            rgb: 1, 1, 1
        Rectangle:
            #source: 'atlas://data/images/defaulttheme/switch-background{}'.format('_disabled' if self.disabled else '')
            size: 0,0
            pos: int(self.center_x - sp(41)), int(self.center_y - sp(16))
    canvas.before:
        Color:
            rgb: 1, 1, 1
        Rectangle:
            #source: 'atlas://data/images/defaulttheme/switch-button{}'.format('_disabled' if self.disabled else '')
            size: 0,0
            pos: int(self.center_x - sp(41) + self.active_norm_pos * sp(41)), int(self.center_y - sp(16))
    size_hint_x: None
    size: 126 + 2 * sp(20), self.height
    padding_x: sp(20)

<SettingBoolean>:
    AnchorLayout:
        anchor_x: 'right'
        RectangleFlatButton:
            text_size: self.size
            markup: True
            padding_x: sp(20)
            pos: root.pos
            halign: 'right'
            valign: 'middle'
            font_size: '12sp'
            text: "True" if root.value == "1" else "False"
            color: [0, 1, 0, 1] if self.text == "True" else [1, 0, 0, 1]
        Switch:
            text: 'Boolean'
            pos: root.pos
            active: bool(root.values.index(root.value)) if root.value in root.values else False
            on_active: root.value = root.values[int(args[1])]


<SettingString>:
    RectangleFlatButton:
        text: root.value or ''
        text_size: self.size
        markup: True
        padding_x: sp(20)
        pos: root.pos
        halign: 'right'
        valign: 'middle'
        font_size: '12sp'
        color: self.text if self.text.find('#') != -1 else [1, 1, 1, 1]

<SettingPath>:
    RectangleFlatButton:
        text: ("..." + re.split('\\\|\\/', str(root.value))[-1]) or ''
        text_size: self.size
        padding_x: sp(20)
        pos: root.pos
        halign: 'right'
        valign: 'middle'
        font_size: '12sp'
        color: [1, 1, 1, 1]

<SettingOptions>:
    RectangleFlatButton:
        text: root.value or ''
        text_size: self.size
        padding_x: sp(20)
        pos: root.pos
        halign: 'right'
        valign: 'middle'
        font_size: '12sp'
        color: [1, 1, 1, 1]

<SettingTitle>:
    text_size: self.width - 32, None
    size_hint_y: None
    height: max(sp(20), self.texture_size[1] + sp(20))
    color: (.9, .9, .9, 1)
    font_size: '12sp'
    canvas:
        Color:
            rgba: .15, .15, .15, .5
        Rectangle:
            pos: self.x, self.y + 2
            size: self.width, self.height - 2
        Color:
            rgb: .2, .2, .2
        Rectangle:
            pos: self.x, self.y - 2
            size: self.width, 1

<RectangleFlatButton>:
    ripple_color: root.ripple_color_base
    background_color: 0, 0, 0, 0
    color: root.primary_color
