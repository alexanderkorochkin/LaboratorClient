#:import Window kivy.core.window.Window
#:import get_hex_from_color kivy.utils.get_hex_from_color
#:import OpacityScrollEffect kivy.effects.opacityscroll
#:import ObjectProperty kivy.properties

<GraphBox>:
    MDCard:
        id: mdcard_id
        md_bg_color: app.theme_cls.accent_color
        radius: [sp(25), sp(25), sp(25), sp(25)]
        MDRelativeLayout:
            MDRelativeLayout:
                MDAnchorLayout:
                    anchor_x: "center"
                    anchor_y: "center"
                    id: garden_graph_placer
            MDRelativeLayout:
                id: value_screen
                MDAnchorLayout:
                    anchor_x: "center"
                    anchor_y: "center"
                    MDLabel:
                        id: graph_main_text
                        markup: True
                        halign: "center"
                        # text: str(root.labvar_value) + " [color=" + get_hex_from_color(app.theme_cls.primary_color) + "](AVG: " + str(root.avg_value) + ")[/color]"
                        text: '0'
                        font_size: root.width / sp(15)
            MDRelativeLayout:
                MDAnchorLayout:
                    anchor_x: "right"
                    anchor_y: "top"
                    padding: sp(5), sp(5), sp(5), sp(5)
                    MDFlatButton:
                        id: graph_labvar_name_button
                        size_hint: None, None
                        size: sp(75), sp(25)
                        font_name: "DejaVuSans.ttf"
                        font_size: sp(12)
                        text: 'None'
                        on_release: root.DialogGraphSettingsOpen()


<GContainer>:
    gcontainer: gcontainer
    scrollview: scroll_view

    MDScrollView:
        id: scroll_view
        do_scroll_x: False
        do_scroll_y: True
        effect_cls: Factory.OpacityScrollEffect
        MDGridLayout:
            id: gcontainer
            size_hint_y: None
            cols: root.columns
            spacing: sp(5)
            #padding: [sp(5), sp(5), sp(5), sp(5)]
            height: self.minimum_height