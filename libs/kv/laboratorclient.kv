#:import Factory kivy.factory.Factory
#:import get_color_from_hex kivy.utils.get_color_from_hex
#:import StiffScrollEffect kivymd.effects.stiffscroll.StiffScrollEffect
#:import OpacityScrollEffectSmooth libs.effects.opacityscrollsmooth
#:import ButtonedLabel libs.utils


<GContainer>:
    gcontainer: gcontainer
    scrollview: scroll_view

    MDScrollView:
        id: scroll_view
        always_overscroll: False
        do_scroll_x: False
        do_scroll_y: True
        effect_cls: Factory.OpacityScrollEffectSmooth
        bar_width: 0
        MDGridLayout:
            id: gcontainer
            size_hint_y: None
            cols: root.columns
            spacing: root.spacing_value
            #padding: [dp(5), dp(5), dp(5), dp(5)]
            height: self.minimum_height

<LaboratorClient>:
    MDFloatLayout:
        # Вьюпорт с графиками
        MDBoxLayout:
            id: main_port
            padding: [root.show_menu * (app.d_ori == 'horizontal') * dp(48) + dp(5) * (not root.show_menu or app.d_ori == 'vertical'), root.show_menu * (app.d_ori == 'vertical') * dp(48) + dp(5), root.show_controls_menu * (app.d_ori == 'horizontal') * controls_panel_port.width + dp(5) * (not root.show_controls_menu or app.d_ori == 'vertical'), root.show_controls_menu * (app.d_ori == 'vertical') * controls_panel_port.height + dp(5) * (not root.show_controls_menu or app.d_ori == 'horizontal')]
            orientation: "vertical"
            MDBoxLayout:
                id: view_port
    MDFloatLayout:
        # Вьюпорт с логом
        MDBoxLayout:
            id: log_box
            md_bg_color: app.theme_cls.bg_normal
            padding: [root.show_menu * (app.d_ori == 'horizontal') * dp(48) + dp(5), root.show_menu * (app.d_ori == 'vertical') * dp(48) + dp(5), root.show_controls_menu * (app.d_ori == 'horizontal') * controls_panel_port.width + dp(5), root.show_controls_menu * (app.d_ori == 'vertical') * controls_panel_port.height + dp(5)]
            MDScrollView:
                id: log_scroll
                do_scroll_x: False
                do_scroll_y: True
                effect_cls: Factory.OpacityScrollEffectSmooth
                MDLabel:
                    id: log_label
                    multiline: True
                    size_hint_y: None
                    size: self.texture_size
                    anchor_y: 'bottom'
                    font_size: sp(12)
                    text: "WELCOME TO LOG VIEWER!"
    MDFloatLayout:
        # Кнопки управления
        MDBoxLayout:
            id: controls_panel_port
            pos_hint: {'x': 0, "bottom": 1} if app.d_ori == 'vertical' else {'x': 1 - ((controls_view_port.width) / Window.width), "bottom": 1}
            size_hint: None, None
            md_bg_color: app.theme_cls.bg_normal
            height: (controls_view_port.height * root.show_controls_menu * root.isControls() + dp(5) * (not root.show_controls_menu)) if app.d_ori == 'vertical' else Window.height
            width: Window.width if app.d_ori == 'vertical' else controls_view_port.width * root.show_controls_menu + dp(5) * (not root.show_controls_menu)
            MDScrollView:
                id: scroll_controls
                always_overscroll: False
                effect_cls: Factory.OpacityScrollEffectSmooth
                edge_damping: 2
                size_hint: [1, 1] if root.show_controls_menu else [None, None]
                size: self.size if root.show_controls_menu else [0, 0]
                do_scroll_x: True if app.d_ori == 'vertical' else False
                do_scroll_y: False if app.d_ori == 'vertical' else True
                bar_width: 0
                MDGridLayout:
                    id: controls_view_port
                    rows: 1 if app.d_ori == 'vertical' else None
                    cols: None if app.d_ori == 'vertical' else 1
                    size_hint: None, None
                    width: self.minimum_width * root.show_controls_menu
                    height: self.minimum_height * root.show_controls_menu
                    spacing: dp(5) * root.show_controls_menu
                    padding: [dp(5), sp(5), dp(5), dp(5)]
    MDFloatLayout:
        # Меню
        MDBoxLayout:
            id: top_menu
            pos_hint: {'left': 1, 'top': 1}
            md_bg_color: app.theme_cls.bg_normal
            orientation: "horizontal" if app.d_ori == 'vertical' else "vertical"
            size_hint: None, None
            height: root.show_menu * dp(48) + dp(5) if app.d_ori == 'vertical' else Window.height
            width: Window.width if app.d_ori == 'vertical' else root.show_menu * dp(48) + dp(5) * (not root.show_menu)
            MDAnchorLayout:
                id: left_menu_block
                anchor_x: "left" if app.d_ori == 'vertical' else 'center'
                anchor_y: "center" if app.d_ori == 'vertical' else 'top'
                height: dp(48) if app.d_ori == 'vertical' else root.height - dp(5) * 2
                width: root.width - dp(5) * 2 if app.d_ori == 'vertical' else dp(48)
                opacity: 1 if root.show_menu else 0
                MDBoxLayout:
                    id: left_side_menu
                    orientation: "horizontal" if app.d_ori == 'vertical' else "vertical"
                    adaptive_size: True
                    padding: dp(10), 0, 0, 0
                    MDFlatButton:
                        id: title
                        text: 'Laborator'
                        opacity: 1 if app.d_ori == 'vertical' else 0
                        disabled: False if app.d_ori == 'vertical' else True
                        size_hint_x: None
                        size: [root.size[0] - right_side_menu.size[0] - endpoint_label.size[0], self.size[1]]
                        pos_hint: {"left": 1, "center_y": .5}
                        halign: 'left'
                        ripple_opacity: 0
                        ripple_scale: 0
                        font_style: 'H6'
                        on_release: root.SwapShowMenu()
            MDAnchorLayout:
                id: right_menu_block
                anchor_x: "right" if app.d_ori == 'vertical' else 'center'
                anchor_y: "center" if app.d_ori == 'vertical' else 'bottom'
                height: dp(50) if app.d_ori == 'vertical' else root.height - dp(5) * 2
                width: root.width - dp(5) * 2 if app.d_ori == 'vertical' else dp(50)
                opacity: 1 if root.show_menu else 0
                MDBoxLayout:
                    id: right_side_menu
                    orientation: "horizontal" if app.d_ori == 'vertical' else "vertical"
                    adaptive_size: True
                    padding: [0, 0, dp(5), 0] if app.d_ori == 'vertical' else [0, 0, 0, dp(5)]
                    MDIcon:
                        id: indicator
                        icon: 'circle-small'
                        font_size: dp(48)
                        color: 'red'
                        size_hint: None, None
                        size: [dp(48), dp(48)]
                    MDIconButton:
                        id: endpoint_label
                        icon: "ip-outline"
                        theme_icon_color: "Custom"
                        icon_color: app.theme_cls.primary_color
                        pos_hint: {"center_x": .5, "center_y": .5} if root.show_menu else {"center_x": 0.5 - 0.5 * (app.d_ori == 'horizontal'), "center_y": 0.5 + 0.5 * (app.d_ori == 'vertical')}
                        on_release: app.dialogTextInput.Open('string', 'Endpoint URL', 'SAVE', 'CANCEL', app.setEndpoint, app.kivy_instance.endpoint, 'opc.tcp://IP:PORT')
                    MDIconButton:
                        id: btn_connect
                        icon: "play"
                        theme_icon_color: "Custom"
                        icon_color: app.theme_cls.primary_color
                        pos_hint: {"center_x": .5, "center_y": .5} if root.show_menu else {"center_x": 0.5 - 0.5 * (app.d_ori == 'horizontal'), "center_y": 0.5 + 0.5 * (app.d_ori == 'vertical')}
                        on_release: root.Connect()
                    MDIconButton:
                        id: btn_disconnect
                        icon: "stop"
                        theme_icon_color: "Custom"
                        icon_color: app.theme_cls.primary_color
                        pos_hint: {"center_x": .5, "center_y": .5} if root.show_menu else {"center_x": 0.5 - 0.5 * (app.d_ori == 'horizontal'), "center_y": 0.5 + 0.5 * (app.d_ori == 'vertical')}
                        disabled: True
                        on_release: root.Disconnect()
                    MDIconButton:
                        id: menu_button
                        icon: "dots-vertical" if app.d_ori == 'vertical' else 'dots-horizontal'
                        theme_icon_color: "Custom"
                        icon_color: app.theme_cls.primary_color
                        pos_hint: {"center_x": .5, "center_y": .5} if root.show_menu else {"center_x": 0.5 - 0.5 * (app.d_ori == 'horizontal'), "center_y": 0.5 + 0.5 * (app.d_ori == 'vertical')}
                        on_release: app.menu_open(self)
    MDFloatLayout:
        MDIconButtonRectangleMy:
            canvas.before:
                Color:
                    rgba: ([app.theme_cls.bg_normal[0], app.theme_cls.bg_normal[1], app.theme_cls.bg_normal[2], 1] if app.d_ori == 'vertical' else [app.theme_cls.bg_normal[0], app.theme_cls.bg_normal[1], app.theme_cls.bg_normal[2], 1]) if root.show_menu else [app.theme_cls.bg_normal[0], app.theme_cls.bg_normal[1], app.theme_cls.bg_normal[2], 1]
                RoundedRectangle:
                    size: self.size
                    pos: self.pos
                    radius: [self.size[0] / 2, ]
            id: hide_menu
            md_bg_color: 0, 0, 0, 0
            ripple_scale: 0
            icon: 'menu-up' if app.d_ori == 'vertical' and root.show_menu else 'menu-down' if app.d_ori == 'vertical' and not root.show_menu else 'menu-left' if app.d_ori == 'horizontal' and root.show_menu else 'menu-right'
            theme_text_color: "Custom"
            text_color: app.theme_cls.primary_color
            icon_size: dp(25)
            pos: [(dp(35) - self.size[0] / 2) * (root.show_menu) + (Window.width / 2 - self.size[0] / 2) * (not root.show_menu), Window.height - self.size[1] / 2 - top_menu.height + dp(5) - dp(5) * (not root.show_menu)] if app.d_ori == 'vertical' else [-self.size[0] / 2 + top_menu.width + dp(2) * (not root.show_menu), Window.height - self.size[1] / 2 - dp(60)]
            on_release: root.SwapShowMenu()
    MDRelativeLayout:
        MDAnchorLayout:
            anchor_x: 'center'
            anchor_y: 'bottom'
            padding: [0, 0, 0, dp(20) + controls_panel_port.height] if app.d_ori == 'vertical' else [0, 0, 0, dp(20)]
            MDBoxLayout:
                id: selection_controls
                orientation: 'horizontal'
                adaptive_size: True
                spacing: dp(10)
                opacity: 0
                MDIconButton:
                    id: unselect_all
                    icon: "close"
                    icon_color: app.theme_cls.primary_color
                    theme_icon_color: "Custom"
                    md_bg_color: 'black'
                    on_release: root.UnselectAll()
                MDIconButton:
                    id: delete_selected_button
                    icon: 'delete'
                    icon_color: colors['Red']['500']
                    theme_icon_color: "Custom"
                    md_bg_color: 'black'
                    on_release: root.RemoveSelectedGraphs()
                    MDIcon:
                        icon: ''
                        badge_icon: "numeric-" + str(root.number_selected) if root.number_selected < 10 else 'numeric-9-plus'


<Item>
    IconLeftWidget:
        icon: root.left_icon
        theme_icon_color: "Custom"
        icon_color: app.theme_cls.primary_color
        on_release: root.on_release()